# Generated by Django 4.0.4 on 2022-04-18 16:47

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin_Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(blank=True, max_length=100, null=True)),
                ('Amount', models.IntegerField(blank=True, null=True)),
                ('Used', models.IntegerField(blank=True, null=True)),
                ('Type', models.CharField(blank=True, choices=[('Discount by Percentage', 'Discount by Percentage'), ('Discount by Amount', 'Discount by Amount')], max_length=100, null=True)),
                ('Quantity', models.CharField(blank=True, choices=[('Unlimited', 'Unlimited'), ('Limited', 'Limited')], max_length=100, null=True)),
                ('Status', models.BooleanField(blank=True, null=True)),
                ('Start_Date', models.DateField(blank=True, null=True)),
                ('End_Date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Coupon',
            },
        ),
        migrations.CreateModel(
            name='Admin_Disputes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('email', models.CharField(blank=True, max_length=1000, null=True)),
                ('Order_Number', models.CharField(blank=True, max_length=500, null=True)),
                ('Subject', models.CharField(blank=True, max_length=1000, null=True)),
                ('Your_Message', models.TextField(blank=True, max_length=2000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Admin_Sliders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_text', models.TextField(blank=True, max_length=1000, null=True)),
                ('title_font_size', models.IntegerField(blank=True, null=True)),
                ('title_font_color', colorfield.fields.ColorField(blank=True, default=None, image_field=None, max_length=18, null=True, samples=None)),
                ('title_animation', models.CharField(blank=True, choices=[('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInLeft', 'fadeInLeft'), ('fadeInRight', 'fadeInRight'), ('fadeInUp', 'fadeInUp'), ('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('SlideInUp', 'SlideInUp'), ('SlideInLeft', 'SlideInLeft'), ('SlideInRight', 'SlideInRight'), ('SlideInDown', 'SlideInDown'), ('RollIn', 'RollIn')], max_length=1000, null=True)),
                ('subtitle_text', models.TextField(blank=True, max_length=1000, null=True)),
                ('subtitle_font_size', models.IntegerField(blank=True, null=True)),
                ('subtitle_font_color', colorfield.fields.ColorField(blank=True, default=None, image_field=None, max_length=18, null=True, samples=None)),
                ('subtitle_animation', models.CharField(blank=True, choices=[('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInLeft', 'fadeInLeft'), ('fadeInRight', 'fadeInRight'), ('fadeInUp', 'fadeInUp'), ('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('SlideInUp', 'SlideInUp'), ('SlideInLeft', 'SlideInLeft'), ('SlideInRight', 'SlideInRight'), ('SlideInDown', 'SlideInDown'), ('RollIn', 'RollIn')], max_length=1000, null=True)),
                ('desc_text', models.TextField(blank=True, max_length=1000, null=True)),
                ('desc_font_size', models.IntegerField(blank=True, null=True)),
                ('desc_font_color', colorfield.fields.ColorField(blank=True, default=None, image_field=None, max_length=18, null=True, samples=None)),
                ('desc_animation', models.CharField(blank=True, choices=[('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInLeft', 'fadeInLeft'), ('fadeInRight', 'fadeInRight'), ('fadeInUp', 'fadeInUp'), ('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('SlideInUp', 'SlideInUp'), ('SlideInLeft', 'SlideInLeft'), ('SlideInRight', 'SlideInRight'), ('SlideInDown', 'SlideInDown'), ('RollIn', 'RollIn')], max_length=1000, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/slider')),
                ('link', models.CharField(blank=True, max_length=1000, null=True)),
                ('text_position', models.CharField(blank=True, choices=[('Left', 'Left'), ('Right', 'Right'), ('Center', 'Center')], max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Admin_tickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('email', models.EmailField(blank=True, max_length=500, null=True)),
                ('subject', models.CharField(blank=True, max_length=1000, null=True)),
                ('your_message', models.TextField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Admin_Tickets',
            },
        ),
        migrations.CreateModel(
            name='Shiprocket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=1000, null=True)),
                ('password', models.CharField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor_subs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, max_length=100, null=True)),
                ('Currency_Symbol', models.CharField(blank=True, default='â‚¹', max_length=10, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=10, null=True)),
                ('Cost', models.CharField(blank=True, max_length=100, null=True)),
                ('Days', models.CharField(blank=True, max_length=100, null=True)),
                ('Product_Limitations', models.CharField(blank=True, choices=[('Unlimited', 'Unlimited'), ('Limited', 'Limited')], max_length=250, null=True)),
                ('Details', models.TextField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Vendor_subs',
            },
        ),
        migrations.CreateModel(
            name='Slider_Font',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, max_length=1000, null=True)),
                ('font_size', models.IntegerField(blank=True, null=True)),
                ('font_color', colorfield.fields.ColorField(blank=True, default=None, image_field=None, max_length=18, null=True, samples=None)),
                ('animation', models.CharField(blank=True, choices=[('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInLeft', 'fadeInLeft'), ('fadeInRight', 'fadeInRight'), ('fadeInUp', 'fadeInUp'), ('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('SlideInUp', 'SlideInUp'), ('SlideInLeft', 'SlideInLeft'), ('SlideInRight', 'SlideInRight'), ('SlideInDown', 'SlideInDown'), ('RollIn', 'RollIn')], max_length=1000, null=True)),
                ('slider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.admin_sliders')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=14)),
                ('email', models.CharField(max_length=200, unique=True)),
                ('image', models.ImageField(default='', upload_to='uploads/')),
                ('user_type', models.CharField(choices=[('Admin', 'Admin'), ('Vendor', 'Vendor'), ('Customer', 'Customer')], default='Customer', max_length=300)),
                ('permissions', models.BooleanField(blank=True, null=True)),
                ('store_name', models.CharField(blank=True, max_length=250, null=True)),
                ('address1', models.CharField(blank=True, max_length=1000, null=True)),
                ('address2', models.CharField(blank=True, max_length=1000, null=True)),
                ('country_vendor', models.CharField(blank=True, choices=[('India', 'India')], max_length=100, null=True)),
                ('state', models.CharField(blank=True, choices=[('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh ', 'Arunachal Pradesh '), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chhattisgarh', 'Chhattisgarh'), ('Goa', 'Goa'), ('Gujarat', 'Gujarat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jammu and Kashmir ', 'Jammu and Kashmir '), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttar Pradesh', 'Uttar Pradesh'), ('Uttarakhand', 'Uttarakhand'), ('West Bengal', 'West Bengal'), ('Andaman and Nicobar Islands', 'Andaman and Nicobar Islands'), ('Chandigarh', 'Chandigarh'), ('Dadra and Nagar Haveli', 'Dadra and Nagar Haveli'), ('Daman and Diu', 'Daman and Diu'), ('Lakshadweep', 'Lakshadweep'), ('National Capital Territory of Delhi', 'National Capital Territory of Delhi'), ('Puducherry', 'Puducherry')], max_length=255, null=True)),
                ('city_town', models.CharField(blank=True, max_length=500, null=True)),
                ('postcode_zip', models.CharField(blank=True, max_length=100, null=True)),
                ('Store_Phone', models.CharField(blank=True, max_length=200, null=True)),
                ('Direct_Number', models.IntegerField(blank=True, null=True)),
                ('Website_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('Company_Incorporation', models.FileField(blank=True, null=True, upload_to='VendorRegsiter/')),
                ('FSSAI_License', models.FileField(blank=True, null=True, upload_to='VendorRegsiter/')),
                ('GST_Number', models.FileField(blank=True, null=True, upload_to='VendorRegsiter/')),
                ('Recall_Plan', models.FileField(blank=True, null=True, upload_to='VendorRegsiter/')),
                ('Fax', models.CharField(blank=True, max_length=100, null=True)),
                ('City', models.CharField(blank=True, max_length=100, null=True)),
                ('Country_cus', models.CharField(blank=True, max_length=1000, null=True)),
                ('Zip', models.CharField(blank=True, max_length=100, null=True)),
                ('Address', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
